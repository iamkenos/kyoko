import type { Page as PlaywrightPageType } from "@playwright/test";
import type { BrowserContext } from "@fixtures/context/types";
import type { FrameLocator } from "@fixtures/frame/types";
import type { Page as PageClass } from "./page";
import type { component } from "./commands/component";
import type { dialogListener } from "./commands/dialog-listener";
import type { downloadFile } from "./commands/download-file";
import type { expect } from "./commands/expect";
import type { frameLocator } from "./commands/frame-locator";
import type { getByAltText } from "./commands/get-by-alt-text";
import type { getByLabel } from "./commands/get-by-label";
import type { getByPlaceholder } from "./commands/get-by-placeholder";
import type { getByRole } from "./commands/get-by-role";
import type { getByTestId } from "./commands/get-by-test-id";
import type { getByText } from "./commands/get-by-text";
import type { getByTitle } from "./commands/get-by-title";
import type { given } from "./commands/given";
import type { locator } from "./commands/locator";
import type { requestsInterceptor } from "./commands/requests-interceptor";
import type { scrollTo } from "./commands/scroll-to";
import type { scrollToBottom } from "./commands/scroll-to-bottom";
import type { scrollToTop } from "./commands/scroll-to-top";
import type { switchToFrame } from "./commands/switch-to-frame";
import type { urlFromBase } from "./commands/url-from-base";

export interface Page extends PlaywrightPageType, PageClass {
  context: () => BrowserContext;
  activeFrame: FrameLocator;
  dialog: { handled: boolean, message: string };
  component<T>(...args: Parameters<typeof component<T>>): ReturnType<typeof component<T>>;
  dialogListener(...args: Parameters<typeof dialogListener>): ReturnType<typeof dialogListener>;
  downloadFile(...args: Parameters<typeof downloadFile>): ReturnType<typeof downloadFile>;
  expect(...args: Parameters<typeof expect>): ReturnType<typeof expect>;
  frameLocator(...args: Parameters<PlaywrightPageType["frameLocator"]>): ReturnType<typeof frameLocator>;
  getByAltText(...args: Parameters<typeof getByAltText>): ReturnType<typeof getByAltText>;
  getByLabel(...args: Parameters<typeof getByLabel>): ReturnType<typeof getByLabel>;
  getByPlaceholder(...args: Parameters<typeof getByPlaceholder>): ReturnType<typeof getByPlaceholder>;
  getByRole(...args: Parameters<typeof getByRole>): ReturnType<typeof getByRole>;
  getByTestId(...args: Parameters<typeof getByTestId>): ReturnType<typeof getByTestId>;
  getByText(...args: Parameters<typeof getByText>): ReturnType<typeof getByText>;
  getByTitle(...args: Parameters<typeof getByTitle>): ReturnType<typeof getByTitle>;
  given(...args: Parameters<typeof given>): ReturnType<typeof given>;
  locator(...args: Parameters<typeof locator>): ReturnType<typeof locator>;
  locator(...args: Parameters<typeof locator>): ReturnType<typeof locator>;
  requestsInterceptor(...args: Parameters<typeof requestsInterceptor>): ReturnType<typeof requestsInterceptor>;
  scrollTo(...args: Parameters<typeof scrollTo>): ReturnType<typeof scrollTo>;
  scrollToBottom(...args: Parameters<typeof scrollToBottom>): ReturnType<typeof scrollToBottom>;
  scrollToTop(...args: Parameters<typeof scrollToTop>): ReturnType<typeof scrollToTop>;
  switchToFrame(...args: Parameters<typeof switchToFrame>): ReturnType<typeof switchToFrame>;
  urlFromBase(...args: Parameters<typeof urlFromBase>): ReturnType<typeof urlFromBase>;
}
