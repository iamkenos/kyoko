import type { Locator as PlaywrightLocatorType } from "@playwright/test";
import type { Page } from "@commands/page/types";
import type { Locator as LocatorClassType } from "./locator";
import type { all } from "./command/all";
import type { and } from "./command/and";
import type { centerPoint } from "./command/centerPoint";
import type { clickUntil } from "./command/clickUntil";
import type { doUntil } from "./command/doUntil";
import type { dragAndDrop } from "./command/dragAndDrop";
import type { dropdownOptions } from "./command/dropdownOptions";
import type { expect } from "./command/expect";
import type { first } from "./command/first";
import type { getByAltText } from "./command/getByAltText";
import type { getByLabel } from "./command/getByLabel";
import type { getByPlaceholder } from "./command/getByPlaceholder";
import type { getByRole } from "./command/getByRole";
import type { getByTestId } from "./command/getByTestId";
import type { getByText } from "./command/getByText";
import type { getByTitle } from "./command/getByTitle";
import type { given } from "./command/given";
import type { hoverIntoView } from "./command/hoverIntoView";
import type { isSelected } from "./command/isSelected";
import type { last } from "./command/last";
import type { location } from "./command/location";
import type { locator } from "./command/locator";
import type { nth } from "./command/nth";
import type { or } from "./command/or";
import type { scrollIntoView } from "./command/scrollIntoView";
import type { uploadFiles } from "./command/uploadFiles";

// @ts-ignore
export interface Locator extends PlaywrightLocatorType, LocatorClassType {
  all: typeof all;
  and: typeof and;
  centerPoint: typeof centerPoint;
  clickUntil: typeof clickUntil;
  doUntil: typeof doUntil;
  dragAndDrop: typeof dragAndDrop;
  dropdownOptions: typeof dropdownOptions;
  expect: typeof expect;
  first: typeof first;
  getByAltText: typeof getByAltText;
  getByLabel: typeof getByLabel;
  getByPlaceholder: typeof getByPlaceholder;
  getByRole: typeof getByRole;
  getByTestId: typeof getByTestId;
  getByText: typeof getByText;
  getByTitle: typeof getByTitle;
  given: typeof given;
  hoverIntoView: typeof hoverIntoView;
  isSelected: typeof isSelected;
  last: typeof last;
  location: typeof location;
  locator: typeof locator;
  page: () => Page;
  nth: typeof nth;
  or: typeof or;
  scrollIntoView: typeof scrollIntoView;
  uploadFiles: typeof uploadFiles;
}
